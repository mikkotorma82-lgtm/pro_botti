from __future__ import annotations
from pathlib import Path
import pandas as pd

def load_history(data_dir: Path, symbol: str, tf: str) -> pd.DataFrame:
    d = data_dir / symbol
    if not d.exists():
        raise FileNotFoundError(f"History folder missing: {d}")
    # 1) Parquet
    pq = d / f"{symbol}_{tf}.parquet"
    if pq.exists():
        for eng in ("pyarrow", "fastparquet"):
            try:
                return pd.read_parquet(pq, engine=eng)
            except Exception:
                pass
    # 2) Feather
    for ext in ("feather","feather.zstd","feather.lz4","ft"):
        f = d / f"{symbol}_{tf}.{ext}"
        if f.exists():
            return pd.read_feather(f)
    # 3) CSV
    for ext in ("csv","CSV"):
        f = d / f"{symbol}_{tf}.{ext}"
        if f.exists():
            return pd.read_csv(f)
    # 4) mik√§ tahansa tunnettu
    for f in sorted(d.glob(f"{symbol}_{tf}.*")):
        try:
            s = f.suffix.lower()
            if s == ".parquet":
                return pd.read_parquet(f)
            if s.startswith(".feather") or s == ".ft":
                return pd.read_feather(f)
            if s == ".csv":
                return pd.read_csv(f)
        except Exception:
            continue
    raise FileNotFoundError(f"No history file for {symbol} {tf} under {d}")
