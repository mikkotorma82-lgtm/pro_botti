from __future__ import annotations
import numpy as np
import pandas as pd

def apply_cooldown(sig: np.ndarray, n: int) -> np.ndarray:
    """Nollaa signaalit kunnes n baaria on kulunut edellisestä EI‑NOLLA merkistä."""
    if n <= 0: 
        return sig
    out = sig.astype(int).copy()
    last_ix = -10**9
    for i, v in enumerate(out):
        if v != 0:
            if i - last_ix <= n:
                out[i] = 0
            else:
                last_ix = i
    return out

def apply_flip_guard(sig: np.ndarray, n: int) -> np.ndarray:
    """Estää nopean suunnanvaihdon: jos suunta vaihtuu < n baarissa, nollaa uusi."""
    if n <= 0:
        return sig
    out = sig.astype(int).copy()
    last_dir = 0
    last_dir_ix = -10**9
    for i, v in enumerate(out):
        if v == 0: 
            continue
        if last_dir != 0 and v == -last_dir and (i - last_dir_ix) <= n:
            out[i] = 0
        elif v != 0:
            last_dir = v
            last_dir_ix = i
    return out
