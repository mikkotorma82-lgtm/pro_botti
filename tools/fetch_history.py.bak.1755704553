import os
import pandas as pd
import yfinance as yf

OUTDIR = "data"

# symbolimappingit Yahoo / Stooq
YAHOO_MAP = {
    "EURUSD": "EURUSD=X",
    "GBPUSD": "GBPUSD=X",
    "US500": "^GSPC",
    "US100": "^NDX",
    "TSLA": "TSLA",
    "AAPL": "AAPL",
    "NVDA": "NVDA",
    "BTCUSDT": "BTC-USD",
    "ETHUSDT": "ETH-USD",
    "XRPUSDT": "XRP-USD",
    "SOLUSDT": "SOL-USD",
    "ADAUSDT": "ADA-USD",
}

PERIOD_MAP = {
    "15m": "730d",   # 2 vuotta
    "1h": "1460d",   # 4 vuotta
    "4h": "3650d",   # 10 vuotta
}

def yf_download(symbol: str, interval: str, period: str) -> pd.DataFrame:
    df = yf.download(
        symbol, interval=interval, period=period,
        progress=False, auto_adjust=False
    )
    if df is None or df.empty:
        return pd.DataFrame(columns=["timestamp","open","high","low","close","volume"])
    df.reset_index(inplace=True)
    df.rename(columns={
        "Datetime": "timestamp",
        "Date": "timestamp",
        "Open": "open",
        "High": "high",
        "Low": "low",
        "Close": "close",
        "Adj Close": "close",
        "Volume": "volume",
    }, inplace=True)
    df["timestamp"] = pd.to_datetime(df["timestamp"])
    return df[["timestamp","open","high","low","close","volume"]]

def fetch_and_save(sym: str, tf: str):
    yf_symbol = YAHOO_MAP.get(sym, sym)
    period = PERIOD_MAP[tf]
    df = yf_download(yf_symbol, interval=tf, period=period)
    if not df.empty:
        out = os.path.join(OUTDIR, f"{sym}_{tf}.csv")
        df.to_csv(out, index=False)
        print(f"[OK] {sym} {tf} rows={len(df)} -> {out}")
    else:
        print(f"[FAIL] {sym} {tf}")

if __name__ == "__main__":
    os.makedirs(OUTDIR, exist_ok=True)
    symbols = list(YAHOO_MAP.keys())
    tfs = list(PERIOD_MAP.keys())
    for s in symbols:
        for tf in tfs:
            fetch_and_save(s, tf)
